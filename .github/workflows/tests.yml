name: Tests

on:
  push:
    branches: [ main ]
    paths:
    - 'tools/**'
    - 'internal/**'
    - '*.go'
    - 'go.*'
  pull_request:
    branches: [ main ]
    paths:
    - 'tools/**'
    - 'internal/**'
    - '*.go'
    - 'go.*'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      vaultwarden:
        image: vaultwarden/server:latest
        env:
          ADMIN_TOKEN: test1234
          I_REALLY_WANT_VOLATILE_STORAGE: "true"
        ports:
          - 8080:80
        options: >-
          --health-cmd "curl -f http://localhost:80/"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5
          --health-start-period 15s

    steps:
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - id: binaries
        run: |
          echo "::set-output name=local-binaries::$GITHUB_WORKSPACE/bin"
          echo "::set-output name=vaultwarden-version::1.21.1"

      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: Binaries Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.binaries.outputs.local-binaries }}
          key: ${{ steps.binaries.outputs.vaultwarden-version }}

      - name: Download Binaries
        run: |
          echo "${{ steps.binaries.outputs.local-binaries }}" >> $GITHUB_PATH
          if [[ -d "${{ steps.binaries.outputs.local-binaries }}" ]]; then
              exit 0
          fi

          wget https://github.com/bitwarden/cli/releases/download/v${{ steps.binaries.outputs.vaultwarden-version }}/bw-linux-${{ steps.binaries.outputs.vaultwarden-version }}.zip
          mkdir -p ${{ steps.binaries.outputs.local-binaries }}
          unzip bw-linux-${{ steps.binaries.outputs.vaultwarden-version }}.zip
          chmod +x bw
          mv bw ${{ steps.binaries.outputs.local-binaries }}

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...
        env:
          VAULTWARDEN_HOST: "127.0.0.1"
          VAULTWARDEN_PORT: "8080"
          TF_ACC: "1"