name: tests

on:
  push:
    branches: [main]
    paths: ["tools/**", "internal/**", "*.go", "go.*", ".github/workflows/tests.yml"]
  pull_request:
    branches: [main]
    paths: ["tools/**", "internal/**", "*.go", "go.*", ".github/workflows/tests.yml"]
  workflow_dispatch:


jobs:
  check_secrets:
    runs-on: ubuntu-latest
    outputs:
      has_secrets: ${{ steps.check.outputs.has_secrets }}
    steps:
      - name: Check if secrets are available
        id: check
        run: |
          if [ -z "${{ secrets.BITWARDEN_EMAIL }}" ]; then
            echo "has_secrets=false" >> $GITHUB_OUTPUT
          else
            echo "has_secrets=true" >> $GITHUB_OUTPUT
          fi

  offline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-test
      - run: mage test:offline
      - name: Code Coverage
        continue-on-error: true
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          parallel: true

  password_manager_vaultwarden_cli:
    runs-on: ubuntu-latest
    services:
      vaultwarden:
        image: vaultwarden/server:1.32.5
        env:
          ADMIN_TOKEN: test1234
          I_REALLY_WANT_VOLATILE_STORAGE: "true"
          DISABLE_ICON_DOWNLOAD: "true"
          LOGIN_RATELIMIT_SECONDS: "1"
          LOGIN_RATELIMIT_MAX_BURST: "1000000"
          ADMIN_RATELIMIT_SECONDS: "1"
          ADMIN_RATELIMIT_MAX_BURST: "1000000"
          DOMAIN: http://127.0.0.1:8000
          ROCKET_PORT: 8000
          ORG_GROUPS_ENABLED: "true"
        options: >-
          --health-cmd "curl -f http://localhost:8000/"
          --health-interval 600s
          --health-timeout 10s
          --health-retries 10
          --health-start-period 15s
          --health-start-interval 6s
        ports:
          - 8000:8000
        volumes:
          - /dev/shm/vaultwarden-data:/data
      nginx:
        image: maxlaverse/nginx-vaultwarden
        ports:
          - 8080:8080
        options: >-
          --link vaultwarden
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-test
        with:
          installCLI: true
      - run: mage test:integrationPwdVaultwardenWithCLI
      - name: Code Coverage
        continue-on-error: true
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          parallel: true

  password_manager_vaultwarden_embedded:
    runs-on: ubuntu-latest
    services:
      vaultwarden:
        image: vaultwarden/server:1.32.5
        env:
          ADMIN_TOKEN: test1234
          I_REALLY_WANT_VOLATILE_STORAGE: "true"
          DISABLE_ICON_DOWNLOAD: "true"
          LOGIN_RATELIMIT_SECONDS: "1"
          LOGIN_RATELIMIT_MAX_BURST: "1000000"
          ADMIN_RATELIMIT_SECONDS: "1"
          ADMIN_RATELIMIT_MAX_BURST: "1000000"
          DOMAIN: http://127.0.0.1:8000
          ROCKET_PORT: 8000
          ORG_GROUPS_ENABLED: "true"
        options: >-
          --health-cmd "curl -f http://localhost:8000/"
          --health-interval 600s
          --health-timeout 10s
          --health-retries 10
          --health-start-period 15s
          --health-start-interval 6s
        ports:
          - 8000:8000
        volumes:
          - /dev/shm/vaultwarden-data:/data
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-test
      - run: mage test:integrationPwdVaultwardenWithEmbeddedClient
      - name: Code Coverage
        continue-on-error: true
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          parallel: true

  password_manager_bitwarden_embedded:
    runs-on: ubuntu-latest

    # Only runs after the Secrets Manager to prevent rate limiting on login.
    needs: [secrets_manager_bitwarden, check_secrets]
    if: needs.check_secrets.outputs.has_secrets == 'true'
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-test
        with:
          deviceIdentifier: ${{ secrets.BITWARDEN_DEVICE_IDENTIFIER }}
      - run: mage test:integrationPwdOfficialWithEmbeddedClient
        env:
          TEST_PASSWORD_MANAGER_EMAIL: "${{ secrets.BITWARDEN_EMAIL }}"
          TEST_PASSWORD_MANAGER_MASTER_PASSWORD: "${{ secrets.BITWARDEN_MASTER_PASSWORD }}"
          TEST_PASSWORD_MANAGER_CLIENT_ID: "${{ secrets.BITWARDEN_CLIENT_ID }}"
          TEST_PASSWORD_MANAGER_CLIENT_SECRET: "${{ secrets.BITWARDEN_CLIENT_SECRET }}"
          TEST_SERVER_URL: "https://vault.bitwarden.eu"
          TEST_PASSWORD_MANAGER_COLLECTION_ID: "${{ secrets.BITWARDEN_TEST_COLLECTION_ID }}"
          TEST_PASSWORD_MANAGER_FOLDER_ID: "${{ secrets.BITWARDEN_TEST_FOLDER_ID }}"
          TEST_PASSWORD_MANAGER_ORGANIZATION_ID: "${{ secrets.BITWARDEN_TEST_ORGANIZATION_ID }}"
          TEST_PASSWORD_MANAGER_ORGANIZATION_MEMBER_ID: "${{ secrets.BITWARDEN_TEST_ORGANIZATION_SELF_MEMBER_ID }}"
          TEST_PASSWORD_MANAGER_ORGANIZATION_OTHER_MEMBER_ID: "${{ secrets.BITWARDEN_TEST_ORGANIZATION_OTHER_MEMBER_ID }}"
          TEST_PASSWORD_MANAGER_USER_NAME: "${{ secrets.BITWARDEN_TEST_SELF_USER_NAME }}"
      - name: Code Coverage
        continue-on-error: true
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          parallel: true

  secrets_manager_bitwarden:
    runs-on: ubuntu-latest
    needs: [check_secrets]
    if: needs.check_secrets.outputs.has_secrets == 'true'
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-test
        with:
          deviceIdentifier: ${{ secrets.BWS_DEVICE_IDENTIFIER }}
      - run: mage test:integrationBwsOfficial
        env:
          TEST_SECRETS_MANAGER_ACCESS_TOKEN: "${{ secrets.BWS_ACCESS_TOKEN }}"
          TEST_SERVER_URL: "https://vault.bitwarden.eu"
      - name: Code Coverage
        continue-on-error: true
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          parallel: true

  secrets_manager_mocked:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-test
      - run: mage test:integrationBwsMocked
      - name: Code Coverage
        continue-on-error: true
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          parallel: true

  coverage:
    runs-on: ubuntu-latest
    needs: [offline, password_manager_vaultwarden_cli, password_manager_vaultwarden_embedded, password_manager_bitwarden_embedded, secrets_manager_bitwarden, secrets_manager_mocked]
    steps:
      - name: Code Coverage
        continue-on-error: true
        uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
