name: Tests

on:
  push:
    branches: [main]
    paths:
      - "tools/**"
      - "internal/**"
      - "*.go"
      - "go.*"
  pull_request:
    branches: [main]
    paths:
      - "tools/**"
      - "internal/**"
      - "*.go"
      - "go.*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      vaultwarden:
        image: vaultwarden/server:1.32.5
        env:
          ADMIN_TOKEN: test1234
          I_REALLY_WANT_VOLATILE_STORAGE: "true"
          DISABLE_ICON_DOWNLOAD: "true"
          LOGIN_RATELIMIT_SECONDS: "1"
          LOGIN_RATELIMIT_MAX_BURST: "1000000"
          ADMIN_RATELIMIT_SECONDS: "1"
          ADMIN_RATELIMIT_MAX_BURST: "1000000"
          DOMAIN: http://127.0.0.1:8000
          ROCKET_PORT: 8000
        options: >-
          --health-cmd "curl -f http://localhost:8000/"
          --health-interval 600s
          --health-timeout 10s
          --health-retries 10
          --health-start-period 15s
          --health-start-interval 6s
        ports:
          - 8000:8000
        volumes:
          - /dev/shm/vaultwarden-data:/data
      nginx:
        image: maxlaverse/nginx-vaultwarden
        ports:
          - 8080:8080
        options: >-
          --link vaultwarden

    steps:
      - id: go-cache-paths
        run: |
          echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT

      - id: binaries
        run: |
          echo "LOCAL_BINARIES=$GITHUB_WORKSPACE/bin" >> $GITHUB_OUTPUT
          echo "BWCLI_VERSION=2025.2.0" >> $GITHUB_OUTPUT

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ">=1.24.0"

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.GOCACHE }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.GOMODCACHE }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23.x

      - name: Install Bitwarden CLI
        run: |
          npm install -g @bitwarden/cli@${{ steps.binaries.outputs.BWCLI_VERSION }}

      - name: Build
        run: go build -v ./...

      - name: Offline Tests
        run: go test -coverprofile=profile.cov -v -race -coverpkg=./... ./... --tags offline
        env:
          TF_ACC: "1"
      - name: Code Coverage for Offline tests
        continue-on-error: true
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          parallel: true

      - name: Test with Embedded Client
        run: go test -coverprofile=profile.cov -v -race -coverpkg=./... ./... --tags integration
        env:
          VAULTWARDEN_URL: "http://127.0.0.1:8000"
          TF_ACC: "1"
          TEST_USE_EMBEDDED_CLIENT: "1"
      - name: Code Coverage for Embedded Client
        continue-on-error: true
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          parallel: true

      - name: Test with Official Client
        run: go test -coverprofile=profile.cov -timeout 3600s -failfast -v -coverpkg=./... ./...  --tags integration
        env:
          VAULTWARDEN_URL: "http://127.0.0.1:8000"
          VAULTWARDEN_REVERSE_PROXY_URL: "http://127.0.0.1:8080"
          TF_ACC: "1"
      - name: Code Coverage for Official Client
        continue-on-error: true
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          parallel: true

  finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
